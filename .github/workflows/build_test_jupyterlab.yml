name: Build and test jupyterlab from previous run

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: "Workflow Run ID"
        required: true
      python_version:
        description: "Python version to use"
        default: "3.12"
        required: true

jobs:
  build_and_test_toms_juptyerlab:
    environment: urdrome
    # needs: [build_js, build_python]
    # runs-on: ubuntu-22.04
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        arch: [x86_64]
        python-version:
          - ${{ inputs.python_version }}
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: tomjakubowski/perspective
          ref: pack-prebuilt-sdist-minimal

      # - name: Config
      #   id: config-step
      #   uses: ./.github/actions/config

      # - name: Initialize Build
      #   id: init-step
      #   uses: ./.github/actions/install-deps
      #   with:
      #     rust: "false"
      #     cpp: "false"
      #     skip_cache: ${{ steps.config-step.outputs.SKIP_CACHE }}

      - uses: actions/download-artifact@v4
        with:
          name: perspective-js-dist
          github-token: ${{ secrets.GH_TOKEN }}
          path: .
          repository: finos/perspective
          run-id: ${{ inputs.run_id }}

      - uses: actions/download-artifact@v4
        with:
          name: perspective-python-dist-${{ matrix.arch }}-${{ matrix.os }}-${{ matrix.python-version }}
          path: .
          github-token: ${{ secrets.GH_TOKEN }}
          repository: finos/perspective
          run-id: ${{ inputs.run_id }}

      - name: Build extension
        run: pnpm run build
        env:
          PACKAGE: "perspective-jupyterlab"

      # - run: node tools/perspective-scripts/repack_wheel.mjs

      - name: Python Build sdist
        run: pnpm run build
        env:
          PACKAGE: "perspective-python"
          if: ${{ runner.os == 'Linux' }}
          # PSP_USE_CCACHE: 1
          # PSP_ARCH: ${{ matrix.arch }}
          PSP_BUILD_SDIST: 1

      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: perspective-python-dist-${{ matrix.arch}}-${{ matrix.os }}-${{ matrix.python-version }}
      #     path: "*.whl"
      #     overwrite: true

      - uses: actions/upload-artifact@v4
        if: ${{ runner.os == 'Linux' }}
        with:
          name: perspective-python-sdist
          path: rust/target/wheels/*.tar.gz

      # - uses: ./.github/actions/install-wheel
      #   if: ${{ runner.os == 'Linux' }}

      # - name: Run Jupyter Tests
      #   if: ${{ false }}
      #   # if: ${{ runner.os == 'Linux' }}
      #   run: |
      #     jupyter lab --generate-config
      #     pnpm run test --jupyter
      #   env:
      #     PACKAGE: "perspective-jupyterlab"
      #     # PSP_USE_CCACHE: 1
