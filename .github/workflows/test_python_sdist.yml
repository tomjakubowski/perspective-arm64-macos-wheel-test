# example of a job ported from finos/perspective build.yaml
name: test python sdist
on:
  workflow_dispatch:
    inputs:
      run_url:
        description: "github actions run to pull artifacts from"
        required: true
jobs:
  test_python_sdist:
    # needs: [build_and_test_jupyterlab]
    environment: urdrome
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - windows-2019
        arch:
          - x86_64
        python-version:
          - 3.9
    steps:
      # NB: this checkout is incoherent - it should use the same repo/ref that
      # triggered the action run
      # the checkout is only used for the config/install-deps actions
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: finos/perspective
          ref: v3.1.3

      - name: Config
        id: config-step
        uses: tomjakubowski/perspective/.github/actions/config@sdist-ci-followups

      - name: Initialize Build
        uses: tomjakubowski/perspective/.github/actions/install-deps@sdist-ci-followups
        with:
          rust: "true"
          cpp: "true"
          python: "true"
          javascript: "false"
          skip_cache: ${{ steps.config-step.outputs.SKIP_CACHE }}

      - uses: tomjakubowski/perspective-oneoff-tests/.github/actions/download-remote-artifact@main
        with:
          name: perspective-rust
          path: crates/
          run_url: ${{ inputs.run_url }}
          github-token: ${{ secrets.GH_TOKEN }}

      - uses: tomjakubowski/perspective-oneoff-tests/.github/actions/download-remote-artifact@main
        with:
          name: perspective-python-sdist
          run_url: ${{ inputs.run_url }}
          github-token: ${{ secrets.GH_TOKEN }}

      # The sdist depends on perspective-{client,server} crates published to
      # crates.io.  Patch the build to instead use .crate artifacts built
      # previously in the workflow
      - name: Set up path overrides for perspective .crate contents
        shell: bash
        run: |
          (cd crates && tar xvf perspective-client-*.crate && tar xvf perspective-server-*.crate)
          CLIENT_CRATE_ROOT=$(ls -d "$PWD"/crates/perspective-client-*/ | head -n 1)
          SERVER_CRATE_ROOT=$(ls -d "$PWD"/crates/perspective-server-*/ | head -n 1)
          if [[ "$(uname)" =~ "CYGWIN" ]]; then
            CLIENT_CRATE_ROOT=$(cygpath -m "$CLIENT_CRATE_ROOT")
            SERVER_CRATE_ROOT=$(cygpath -m "$CLIENT_CRATE_ROOT")
          fi

          echo "CLIENT_CRATE_ROOT" "$CLIENT_CRATE_ROOT"
          echo "PWD" "$PWD"

          mkdir -p $HOME/.cargo
          cat > $HOME/.cargo/config.toml <<EOF
          [patch.crates-io]
          perspective-client = { path = "$CLIENT_CRATE_ROOT" }
          perspective-server = { path = "$SERVER_CRATE_ROOT" }
          EOF

      - name: Install perspective-python sdist
        shell: bash
        run: python -m pip install -vv ./perspective*.tar.gz

      - name: Verify labextension
        shell: bash
        run: |
          jupyter labextension list --debug
          jupyter labextension list 2>&1 | grep '@finos/perspective-jupyterlab'

      - name: Verify licenses are installed
        shell: bash
        run: |
          pip show -f perspective-python > wheel_installed_files.txt
          cat wheel_installed_files.txt
          grep licenses/LICENSE.md wheel_installed_files.txt
          grep licenses/LICENSE_THIRDPARTY_cargo.yml wheel_installed_files.txt

      - name: Run import test
        run: python -c 'import perspective'

      - name: Run pytests
        run: pytest -v --pyargs 'perspective.tests'
